plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.10'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'org.asciidoctor.convert' version '1.5.8'
	id 'org.ec4j.editorconfig' version '0.0.3'  // .editorconfig 플러그인
	id 'checkstyle'                             // Checkstyle 플러그인
}

group = 'hateoas.mongo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.data:spring-data-rest-hal-explorer'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	implementation group: 'io.gatling', name: 'jsonpath_2.12', version: '0.7.0'
	implementation group: 'org.modelmapper', name: 'modelmapper', version: '3.1.0'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.springfox:springfox-swagger2:3.0.0'
	implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}

/* 캠퍼스 핵데이 Code Style 적용 */
// 인코딩 설정
compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

// .editorconfig 플러그인 설정
editorconfig {
	excludes = ['build']
}

check.dependsOn editorconfigCheck

// Checkstyle 플러그인 설정
checkstyle {
	maxWarnings = 0 // 규칙이 어긋나는 코드가 하나라도 있을 경우 빌드 fail을 내고 싶다면 이 선언을 추가한다.
	configFile = file("${rootDir}/naver-checkstyle-rules.xml")
	configProperties = ["suppressionFile": "${rootDir}/naver-checkstyle-suppressions.xml"]
	toolVersion = "8.24"  // checkstyle 버전 8.24 이상 선언
}
